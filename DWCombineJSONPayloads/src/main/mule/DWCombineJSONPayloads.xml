<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="0af11883-c630-49ce-9565-d37b2e26560f" basePath="/api" >
		<http:listener-connection host="${http.server}" port="${http.port}" />
	</http:listener-config>
	<configuration-properties doc:name="Configuration properties" doc:id="5b88606c-f867-4bff-8044-658560f14958" file="config/config-dev.yaml" />
	<flow name="DWCombineJSONPayloadsFlow" doc:id="ad370748-c07f-4f6a-88fd-586a1c23a6e1" >
		<http:listener doc:name="Listener" doc:id="1a1acd88-0caa-40ca-99e2-5a295cc70d19" config-ref="HTTP_Listener_config" path="/combinePayloads" allowedMethods="GET"/>
		<ee:transform doc:name="Transform Message" doc:id="174870bb-5d3e-4789-8718-49dfb916c9cd" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var studentPayload = {
	"Students": [
		{
			"Student": {
				"Id": 100,
				"Name": "Mike",
				"Hobby": "Music",
				"Age": 12
			}
		},
		{
			"Student": {
				"Id": 200,
				"Name": "David",
				"Hobby": "TT",
				"Age": 12
			}
		},
		{
			"Student": {
				"Id": 300,
				"Name": "John",
				"Hobby": "Singing",
				"Age": 14
			}
		},
		{
			"Student": {
				"Id": 400,
				"Name": "James",
				"Hobby": "Dancing",
				"Age": 15
			}
		}
	]
}
var examGradePayload = {
	"ExamGrade": [
		{
			"Student": {
				"Id": 100,
				"Grade": "A+"
			}
		},
		{
			"Student": {
				"Id": 200,
				"Grade": "A"
			}
		},
		{
			"Student": {
				"Id": 300,
				"Grade": "C"
			}
		},
		{
			"Student": {
				"Id": 400,
				"Grade": "B+"
			}
		}
	]
}
fun getGrade(studentId) = {
	(examGradePayload.ExamGrade[?($.Student.Id == studentId)])
}
---
{
	"Students":
		studentPayload.Students map ((student) -> {
			"Student": {
				Id: student.Student.Id,
				Name: student.Student.Name,
				Hobby: student.Student.Hobby,
				Age: student.Student.Age,
				Grade: getGrade(student.Student.Id).Student.Grade
			}
		})
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
